<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/31
 * Time: 14:05
 */

namespace frontend\components;


use frontend\models\Cart;
use yii\base\Component;
use yii\web\Cookie;

class ShopCart extends Component
{
    //声明一个私有对象来存购物车数据
    private $cart;
    public function init()
    {
        //得到cookie对象
        $getCookie = \Yii::$app->request->cookies;
        //得到原来购物车的数据
        $this->cart = $getCookie->getValue('cart',[]);
        parent::init(); // TODO: Change the autogenerated stub
    }
//    public function __construct(array $config = [])
//    {
//        //得到cookie对象
//        $getCookie = \Yii::$app->request->cookies;
//        //得到原来购物车的数据
//        $this->cart = $getCookie->getValue('cart',[]);
//        parent::__construct($config);
//    }

    /**增
     * @param $id
     * @param $num
     */
    public function add($id,$num){
        if (array_key_exists($id, $this->cart)) {
            //已经存在 值+$amount
            $this->cart[$id] += $num;
        } else {
            //新增
            $this->cart[$id] = (int)$num;
        }
        return $this;


    }

    public function del($id){
        //删除当前数据
        unset($this->cart[$id]);
        return $this;

    }

    public function flush(){
        $this->cart=[];
        return $this;
    }

    /**购物车修改
     * @param $id商品id
     * @param $num商品数量
     */
    public function update($id,$num){
        if($this->cart[$id]){

            $this->cart[$id]=$num;

        }
        return $this;

    }

    /**查
     * @return mixed
     */
public function get(){
      return $this->cart;
}

public function dbSyn(){
    //1、取出cookie中的数据
    //$cart = (new ShopCart())->get();

    //2、把数据同步到数据库中
    //判断当前用户购物车有没有商品
    //当前用户
    $userId =\Yii::$app->user->id;
    foreach ($this->cart as $goodId=>$num){

        $cartDB = Cart::findOne(['goods_id'=>$goodId,'user_id'=>$userId]);
        //判断
        if($cartDB){
            //有商品存在 执行 + 商品数量 $cart->num = $cart->num +$amount
            $cartDB->num += $num;


        }else{
            //没有商品存在  就新增商品
            //创建对象
            $cartDB = new Cart();
            //赋值
            $cartDB->goods_id=$goodId;
            $cartDB->num=$num;
            $cartDB->user_id=$userId;

        }
        //保存
        $cartDB->save();
    }
    return $this;

}


    /**保存cookie
     * @return mixed
     */
    public function save(){
        //把$id当作键，把$amount当作值
        //1、设置cookie对象
        $setCookie = \Yii::$app->response->cookies;
        //2、创建一个cookie对象

        $cookie = new Cookie([
            'name'=>'cart',
            'value' =>$this->cart
        ]);
        //3、通过cookie对象添加一个cookie
        $setCookie->add($cookie);


    }


}